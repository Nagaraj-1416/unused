https://qhh83hshwulo64vw-57151226063.shopifypreview.com/products_preview?preview_key=b10dea078daba7983d8947514167dffa

<div
        id="ProductGalleryItems"
        class="hidden md:block md:pr-3 md:grow-0 md:shrink-0 md:w-1/6"
        style="max-height: 844px; overflow-y: auto;"
>
        {% for image in product.images %}
<img
            class="w-full thumbnail this-one secondary-image"
            src="{{ image | img_url: '800x' }}"
            alt="White"
            data-uw-rm-alt-original="White"
            data-uw-rm-alt="ALT"
>
        {% endfor %}
</div>

<div id="ProductImagesWrapper" class="{{ product_images_wrapper_classes }} w-full">
<!-- Gallery Items -->
<div
        id="ProductGalleryItems"
        class="hidden md:block md:pr-3 md:grow-0 md:shrink-0 md:w-1/6"
        style="max-height: 844px; overflow-y: auto;"
>
        {% for image in product.images %}
<img
            class="w-full thumbnail this-one secondary-image"
            src="{{ image | img_url: '800x' }}"
            alt="White"
            data-uw-rm-alt-original="White"
            data-uw-rm-alt="ALT"
>
        {% endfor %}
</div>
 
      <!-- Main Image -->
<div
        class="product-main-image relative{% if settings.enable_pdp_main_images_t_across %} w-full{% else %} w-full {% if settings.pdp_thumbnail_pos != 'bottom' %} md:grow md:shrink-0 md:w-5/6{% endif %}{% endif %}"
>
<div id="ProductMainImageContainer" class="relative w-full">
<div class="absolute top-0 left-0 w-full h-full z-10 pointer-events-none">
            {% include 'smart-tags-render-smart-tag-badge-pdp' %}
</div>
<div class="product-label-container">            
<!-- NEW / SOLD OUT LABEL -->
{% assign specific_tag = 'Badge:Preorder' %}
{% assign specific_tag_value = 'Badge:ComingSoon' %}
{% if product.available == false %}
 
                {% if product.tags contains 'Badge:Isabella' %}
<div class="product-label two-line-badge"><span>As Seen On</span> <span>Isabella Strahan</span></div>
                {% elsif product.tags contains 'Badge:Rachel' %}
<div class="product-label two-line-badge"><span>As Seen On</span> <span> Rachel Platten </span> </div>
                {% elsif product.tags contains 'Badge:Stylist' %}
<div class="product-label two-line-badge badge"><span>Stylist's</span> <span>Pick</span></div>
                {% elsif product.tags contains specific_tag %}
<div class="product-label">PREORDER</div>
                {% elsif product.tags contains specific_tag_value %}  
<div class="product-label">COMING SOON</div>
                {% else %}
                  {% comment %} <div class="product-label">SOLD OUT</div>   {% endcomment %}  
                {% endif %}
              {% else %}
 
                 {% if product.tags contains 'Badge:Isabella' %}
<div class="product-label two-line-badge"><span>As Seen On</span> <span>Isabella Strahan</span></div>
                {% elsif product.tags contains 'Badge:Rachel' %}
<div class="product-label two-line-badge"><span>As Seen On</span> <span> Rachel Platten </span> </div>
                {% elsif product.tags contains 'Badge:Stylist' %}
<div class="product-label two-line-badge badge"><span>Stylist's</span> <span>Pick</span></div>
                 {% elsif product.tags contains specific_tag %}
<div class="product-label">PREORDER</div>
                  {% else %}
                   {% for t in product.tags %}
                      {% if t contains 'Badge:BackinStock' %} 
<div class="product-label">BACK IN STOCK</div>
                      {% elsif t contains 'smarttag_new_arrival' %} 
<div class="product-label">NEW</div>
                      {% endif %}
                    {% endfor %}
                  {% endif %}
              {% endif %}
</div>
<div class="image-container">
<img
              id="mainImage"
              class="w-full{% if settings.enable_pdp_main_images_t_across %} hidden{% endif %} image-zoom"
              src="{{ featured_image | img_url: '800x' }}"
              data-zoom="{{ featured_image | img_url: '1024x1024', scale: 2 }}"
              alt="{{ featured_image.alt | escape }}"
>
<div class="image-details"></div>
</div>
</div>
</div>
</div>

<div class="slider" id="mobile-slider">
<div class="product-label-container">
 
    {% assign specific_tag = 'Badge:Preorder' %}
 
    {% assign specific_tag_value = 'Badge:ComingSoon' %}
 
    {% if product.available == false %}
 
      {% if product.tags contains 'Badge:Isabella' %}
<div class="product-label two-line-badge"><span>As Seen On</span> <span>Isabella Strahan</span></div>
 
      {% elsif product.tags contains 'Badge:Rachel' %}
<div class="product-label two-line-badge"><span>As Seen On</span> <span>Rachel Platten</span></div>
 
      {% elsif product.tags contains 'Badge:Stylist' %}
<div class="product-label two-line-badge badge"><span>Stylist's</span> <span>Pick</span></div>
 
      {% elsif product.tags contains specific_tag %}
<div class="product-label">PREORDER</div>
 
      {% elsif product.tags contains specific_tag_value %}
<div class="product-label">COMING SOON</div>
 
      {% endif %}
 
    {% else %}
 
      {% if product.tags contains 'Badge:Isabella' %}
<div class="product-label two-line-badge"><span>As Seen On</span> <span>Isabella Strahan</span></div>
 
      {% elsif product.tags contains 'Badge:Rachel' %}
<div class="product-label two-line-badge"><span>As Seen On</span> <span>Rachel Platten</span></div>
 
      {% elsif product.tags contains 'Badge:Stylist' %}
<div class="product-label two-line-badge badge"><span>Stylist's</span> <span>Pick</span></div>
 
      {% elsif product.tags contains specific_tag %}
<div class="product-label">PREORDER</div>
 
      {% else %}
 
        {% for t in product.tags %}
 
          {% if t contains 'Badge:BackinStock' %}
<div class="product-label">BACK IN STOCK</div>
 
          {% elsif t contains 'smarttag_new_arrival' %}
<div class="product-label">NEW</div>
 
          {% endif %}
 
        {% endfor %}
 
      {% endif %}
 
    {% endif %}
</div>
<div class="image-container">
 
    {% for image in product.images %}
<div>
<img
 
          class="w-full"
 
          src="{{ image | img_url: '800x' }}"
 
          data-zoom="{{ image | img_url: 'master' }}"
 
          alt="White"
 
          {% if forloop.first %}id="mainMobileImage"{% endif %}
>
</div>
 
    {% endfor %}
</div>
<div class="dots"></div>
</div>


<script>
  document.addEventListener("DOMContentLoaded", function () {
    const variants = {{ product.variants | json }};
    let selectedColor = "{{ product.selected_or_first_available_variant.option1 }}";
    let selectedSize = "";
    const variantInput = document.getElementById("pdp-cart-btn");
    const addToCartBtn = document.querySelector(".add-to-cart-btn");
    const colorLinks = document.querySelectorAll(".color-swatch-link");
    const sizeItems = document.querySelectorAll(".size-item");
    const priceDisplay = document.getElementById("variant-price");
    const priceDisplayDesktop = document.getElementById("variant-price-desktop");
	const colorDisplay = document.getElementById("variant-color");
    function updateDisplayedPrice(matchedVariant) {
      if (matchedVariant) {
        priceDisplay.textContent = matchedVariant.price
          ? `$${(matchedVariant.price / 100).toFixed(2)}`
          : '';
         priceDisplayDesktop.textContent = matchedVariant.price
          ? `$${(matchedVariant.price / 100).toFixed(2)}`
          : '';
		 colorDisplay.textContent = selectedColor ? selectedColor : ''
      } else {
        priceDisplay.textContent = '';
      }
    }
    function updateSelectedVariant() {
      let matchedVariant = variants.find(v =>
        v.option1.toLowerCase() === selectedColor.toLowerCase() &&
        v.option2.toLowerCase() === selectedSize.toLowerCase()
      );
      if (!matchedVariant && selectedSize) {
        const numberMatch = selectedSize.match(/^\d+/);
        if (numberMatch) {
          const sizeNumber = numberMatch[0];
          matchedVariant = variants.find(v =>
            v.option1.toLowerCase() === selectedColor.toLowerCase() &&
            v.option2.toLowerCase().startsWith(sizeNumber)
          );
        }
      }
      if (!matchedVariant) {
        matchedVariant = variants.find(v =>
          v.option1.toLowerCase() === selectedColor.toLowerCase()
        );
      }
      if (matchedVariant && matchedVariant.available) {
        variantInput.value = matchedVariant.id;
        addToCartBtn.disabled = false;
      } else {
        variantInput.value = "";
        addToCartBtn.disabled = true;
      }
      updateDisplayedPrice(matchedVariant);
    }
    function selectFirstAvailableSizeForColor() {
      let firstAvailable = null;
      sizeItems.forEach(item => {
        const size = item.textContent.trim();
        const matchingVariant = variants.find(v =>
          v.option1.toLowerCase() === selectedColor.toLowerCase() &&
          v.option2.toLowerCase() === size.toLowerCase() &&
          v.available
        );
        item.classList.remove("active");
        if (matchingVariant && !firstAvailable) {
          firstAvailable = item;
          selectedSize = size;
        }
      });
      if (firstAvailable) {
        firstAvailable.classList.add("active");
        updateSelectedVariant();
      }
    }
    colorLinks.forEach(link => {
      link.addEventListener("click", () => {
        colorLinks.forEach(l => l.classList.remove("active"));
        link.classList.add("active");
        selectedColor = link.dataset.colorName || link.textContent.trim();
        document.querySelector("#selected-color strong").innerText = selectedColor.toUpperCase();
        selectedSize = "";
        sizeItems.forEach(item => item.classList.remove("active"));

 
        // Update available sizes
        sizeItems.forEach(item => {
          const size = item.textContent.trim();
          const matchingVariant = variants.find(v =>
            v.option1.toLowerCase() === selectedColor.toLowerCase() &&
            v.option2.toLowerCase() === size.toLowerCase()
          );
          if (matchingVariant && matchingVariant.available) {
            item.classList.remove("size-unavailable");
          } else {
            item.classList.add("size-unavailable");
          }
        });
 

        selectFirstAvailableSizeForColor();
      });
    });
    sizeItems.forEach(item => {
      item.addEventListener("click", () => {
        if (item.classList.contains("size-unavailable")) return;
        if (item.classList.contains("active")) {
          item.classList.remove("active");
          selectedSize = "";
          variantInput.value = "";
          addToCartBtn.disabled = true;
          updateDisplayedPrice(null);
 

          selectFirstAvailableSizeForColor();
        } else {
          sizeItems.forEach(i => i.classList.remove("active"));
          item.classList.add("active");
          selectedSize = item.dataset.sizeName || item.textContent.trim();
          updateSelectedVariant();
        }
      });
    });
 

    const firstColorLink = colorLinks[0];
    if (firstColorLink) {
      firstColorLink.classList.add("active");
      selectedColor = firstColorLink.dataset.colorName || firstColorLink.textContent.trim();
      document.querySelector("#selected-color strong").innerText = selectedColor.toUpperCase();
 

      sizeItems.forEach(item => {
        const size = item.textContent.trim();
        const matchingVariant = variants.find(v =>
          v.option1.toLowerCase() === selectedColor.toLowerCase() &&
          v.option2.toLowerCase() === size.toLowerCase()
        );
        if (matchingVariant && matchingVariant.available) {
          item.classList.remove("size-unavailable");
        } else {
          item.classList.add("size-unavailable");
        }
      });
 

      selectFirstAvailableSizeForColor();
    }
  });
</script>


[
     {
          "id": 44313099763919,
          "title": "BLACK / 20''",
          "option1": "BLACK",
          "option2": "20''",
          "option3": null,
          "sku": "5705045-BLACK-20''",
          "requires_shipping": true,
          "taxable": true,
          "featured_image": {
               "id": 29456530243791,
               "product_id": 7642365001935,
               "position": 1,
               "created_at": "2021-08-26T18:29:36-04:00",
               "updated_at": "2021-08-26T18:29:39-04:00",
               "alt": "Black",
               "width": 1220,
               "height": 1500,
               "src": "//k7z28xacwip1yfjq-57151226063.shopifypreview.com/cdn/shop/products/5705065_black_1-v2.jpg?v=1630016979",
               "variant_ids": [
                    44313099763919,
                    44313099796687,
                    44313099829455,
                    44313099862223
               ]
          },
          "available": true,
          "name": "Out Of Bounds Lightweight Hard Side Spinner Suitcase - BLACK / 20''",
          "public_title": "BLACK / 20''",
          "options": [
               "BLACK",
               "20''"
          ],
          "price": 18000,
          "weight": 0,
          "compare_at_price": null,
          "inventory_management": "shopify",
          "barcode": "023572474215",
          "featured_media": {
               "alt": "Black",
               "id": 21714337792207,
               "position": 1,
               "preview_image": {
                    "aspect_ratio": 0.813,
                    "height": 1500,
                    "width": 1220,
                    "src": "//k7z28xacwip1yfjq-57151226063.shopifypreview.com/cdn/shop/products/5705065_black_1-v2.jpg?v=1630016979"
               }
          },
          "requires_selling_plan": false,
          "selling_plan_allocations": [],
          "quantity_rule": {
               "min": 1,
               "max": null,
               "increment": 1
          }
     },
     {
          "id": 44313099796687,
          "title": "BLACK / 24''",
          "option1": "BLACK",
          "option2": "24''",
          "option3": null,
          "sku": "5705055-BLACK-24''",
          "requires_shipping": true,
          "taxable": true,
          "featured_image": {
               "id": 29456530243791,
               "product_id": 7642365001935,
               "position": 1,
               "created_at": "2021-08-26T18:29:36-04:00",
               "updated_at": "2021-08-26T18:29:39-04:00",
               "alt": "Black",
               "width": 1220,
               "height": 1500,
               "src": "//k7z28xacwip1yfjq-57151226063.shopifypreview.com/cdn/shop/products/5705065_black_1-v2.jpg?v=1630016979",
               "variant_ids": [
                    44313099763919,
                    44313099796687,
                    44313099829455,
                    44313099862223
               ]
          },
          "available": true,
          "name": "Out Of Bounds Lightweight Hard Side Spinner Suitcase - BLACK / 24''",
          "public_title": "BLACK / 24''",
          "options": [
               "BLACK",
               "24''"
          ],
          "price": 24000,
          "weight": 0,
          "compare_at_price": null,
          "inventory_management": "shopify",
          "barcode": "023572474239",
          "featured_media": {
               "alt": "Black",
               "id": 21714337792207,
               "position": 1,
               "preview_image": {
                    "aspect_ratio": 0.813,
                    "height": 1500,
                    "width": 1220,
                    "src": "//k7z28xacwip1yfjq-57151226063.shopifypreview.com/cdn/shop/products/5705065_black_1-v2.jpg?v=1630016979"
               }
          },
          "requires_selling_plan": false,
          "selling_plan_allocations": [],
          "quantity_rule": {
               "min": 1,
               "max": null,
               "increment": 1
          }
     },
]
<script>
  document.addEventListener("DOMContentLoaded", function () {
    const variants = {{ product.variants | json }};
    console.log("VariantImages", variants);
    console.log("VariantsImagesJson", JSON.stringify(variants, null, 10));
    let selectedColor = "{{ product.selected_or_first_available_variant.option1 }}";
    let selectedSize = "";
    const variantInput = document.getElementById("pdp-cart-btn");
    const addToCartBtn = document.querySelector(".add-to-cart-btn");
    const colorLinks = document.querySelectorAll(".color-swatch-link");
    const sizeItems = document.querySelectorAll(".size-item");
    const priceDisplay = document.getElementById("variant-price");
    const priceDisplayDesktop = document.getElementById("variant-price-desktop");
    const colorDisplay = document.getElementById("variant-color");
    const mainImage = document.getElementById("mainImage");
    const mobileImage = document.getElementById("mainMobileImage");

    function updateMainImage(variant) {
      const fallbackSrc = "https://qhh83hshwulo64vw-57151226063.shopifypreview.com/products_preview?preview_key=b10dea078daba7983d8947514167dffa";
      const fallbackZoomSrc = fallbackSrc;

      let newSrc, zoomSrc, altText;

      if (variant && variant.featured_image && variant.featured_image.src) {
        const baseImage = variant.featured_image.src.replace(/(\.jpg|\.png|\.webp).*/, '');
        newSrc = `${baseImage}_800x.jpg`;
        zoomSrc = `${baseImage}_1024x1024@2x.jpg`;
        altText = variant.option1;
      } else {
        newSrc = fallbackSrc;
        zoomSrc = fallbackZoomSrc;
        altText = "Fallback image";
      }

      if (mainImage) {
        mainImage.src = newSrc;
        mainImage.setAttribute("data-zoom", zoomSrc);
        mainImage.alt = altText;
      }
      if (mobileImage) {
        mobileImage.src = newSrc;
        mobileImage.setAttribute("data-zoom", zoomSrc);
        mobileImage.alt = altText;
      }
    }

    function updateDisplayedPrice(matchedVariant) {
      if (matchedVariant) {
        const price = matchedVariant.price ? `$${(matchedVariant.price / 100).toFixed(2)}` : '';
        priceDisplay.textContent = price;
        priceDisplayDesktop.textContent = price;
        colorDisplay.textContent = selectedColor || '';
      } else {
        priceDisplay.textContent = '';
        priceDisplayDesktop.textContent = '';
        colorDisplay.textContent = '';
      }
    }

    function updateSelectedVariant() {
      let matchedVariant = variants.find(v =>
        v.option1.toLowerCase() === selectedColor.toLowerCase() &&
        v.option2.toLowerCase() === selectedSize.toLowerCase()
      );
      if (!matchedVariant && selectedSize) {
        const numberMatch = selectedSize.match(/^\d+/);
        if (numberMatch) {
          const sizeNumber = numberMatch[0];
          matchedVariant = variants.find(v =>
            v.option1.toLowerCase() === selectedColor.toLowerCase() &&
            v.option2.toLowerCase().startsWith(sizeNumber)
          );
        }
      }
      if (!matchedVariant) {
        matchedVariant = variants.find(v =>
          v.option1.toLowerCase() === selectedColor.toLowerCase()
        );
      }
      if (matchedVariant && matchedVariant.available) {
        variantInput.value = matchedVariant.id;
        addToCartBtn.disabled = false;
        updateMainImage(matchedVariant);
      } else {
        variantInput.value = "";
        addToCartBtn.disabled = true;
      }
      updateDisplayedPrice(matchedVariant);
    }

    function selectFirstAvailableSizeForColor() {
      let firstAvailable = null;
      sizeItems.forEach(item => {
        const size = item.textContent.trim();
        const matchingVariant = variants.find(v =>
          v.option1.toLowerCase() === selectedColor.toLowerCase() &&
          v.option2.toLowerCase() === size.toLowerCase() &&
          v.available
        );
        item.classList.remove("active");
        if (matchingVariant && !firstAvailable) {
          firstAvailable = item;
          selectedSize = size;
        }
      });
      if (firstAvailable) {
        firstAvailable.classList.add("active");
        updateSelectedVariant();
      }
    }

    colorLinks.forEach(link => {
      link.addEventListener("click", () => {
        colorLinks.forEach(l => l.classList.remove("active"));
        link.classList.add("active");
        selectedColor = link.dataset.colorName || link.textContent.trim();
        document.querySelector("#selected-color strong").innerText = selectedColor.toUpperCase();
        selectedSize = "";
        sizeItems.forEach(item => item.classList.remove("active"));
        sizeItems.forEach(item => {
          const size = item.textContent.trim();
          const matchingVariant = variants.find(v =>
            v.option1.toLowerCase() === selectedColor.toLowerCase() &&
            v.option2.toLowerCase() === size.toLowerCase()
          );
          if (matchingVariant && matchingVariant.available) {
            item.classList.remove("size-unavailable");
          } else {
            item.classList.add("size-unavailable");
          }
        });
        selectFirstAvailableSizeForColor();
      });
    });

    sizeItems.forEach(item => {
      item.addEventListener("click", () => {
        if (item.classList.contains("size-unavailable")) return;
        if (item.classList.contains("active")) {
          item.classList.remove("active");
          selectedSize = "";
          variantInput.value = "";
          addToCartBtn.disabled = true;
          updateDisplayedPrice(null);
          selectFirstAvailableSizeForColor();
        } else {
          sizeItems.forEach(i => i.classList.remove("active"));
          item.classList.add("active");
          selectedSize = item.dataset.sizeName || item.textContent.trim();
          updateSelectedVariant();
        }
      });
    });

    const firstColorLink = colorLinks[0];
    if (firstColorLink) {
      firstColorLink.classList.add("active");
      selectedColor = firstColorLink.dataset.colorName || firstColorLink.textContent.trim();
      document.querySelector("#selected-color strong").innerText = selectedColor.toUpperCase();
      sizeItems.forEach(item => {
        const size = item.textContent.trim();
        const matchingVariant = variants.find(v =>
          v.option1.toLowerCase() === selectedColor.toLowerCase() &&
          v.option2.toLowerCase() === size.toLowerCase()
        );
        if (matchingVariant && matchingVariant.available) {
          item.classList.remove("size-unavailable");
        } else {
          item.classList.add("size-unavailable");
        }
      });
      selectFirstAvailableSizeForColor();
    }
  });
</script>


<script>
  document.addEventListener("DOMContentLoaded", function () {
    const variants = {{ product.variants | json }};
    let selectedColor = "{{ product.selected_or_first_available_variant.option1 }}";
    let selectedSize = "";
    const variantInput = document.getElementById("pdp-cart-btn");
    const addToCartBtn = document.querySelector(".add-to-cart-btn");
    const colorLinks = document.querySelectorAll(".color-swatch-link");
    const sizeItems = document.querySelectorAll(".size-item");
    const priceDisplay = document.getElementById("variant-price");
    const priceDisplayDesktop = document.getElementById("variant-price-desktop");
    const colorDisplay = document.getElementById("variant-color");
    const mainImage = document.getElementById("mainImage");
    const mobileImage = document.getElementById("mainMobileImage");

    const fallbackImageSrc = "{{ 'placeholder.jpg' | asset_url }}";
    function updateMainImage(variant) {
      if (!variant) return;
      const image = variant.featured_image;
      if (image && image.src) {
        const baseImage = image.src.replace(/(\.jpg|\.png|\.webp).*/, '');
        const newSrc = `${baseImage}_800x.jpg`;
        const zoomSrc = `${baseImage}_1024x1024@2x.jpg`;
        mainImage.src = newSrc;
        mainImage.setAttribute("data-zoom", zoomSrc);
        mainImage.alt = variant.option1;
        mobileImage.src = newSrc;
        mobileImage.setAttribute("data-zoom", zoomSrc);
        mobileImage.alt = variant.option1;

        mobileImage.classList.remove("loaded");
        void mobileImage.offsetWidth; // trigger reflow
        mobileImage.classList.add("loaded");
      } else {
        // fallback image
        mainImage.src = fallbackImageSrc;
        mainImage.removeAttribute("data-zoom");
        mainImage.alt = "Product Image";
        mobileImage.src = fallbackImageSrc;
        mobileImage.removeAttribute("data-zoom");
        mobileImage.alt = "Product Image";
      }
    }

    function updateDisplayedPrice(variant) {
      if (variant) {
        const price = `$${(variant.price / 100).toFixed(2)}`;
        priceDisplay.textContent = price;
        priceDisplayDesktop.textContent = price;
        colorDisplay.textContent = selectedColor;
      } else {
        priceDisplay.textContent = '';
        priceDisplayDesktop.textContent = '';
        colorDisplay.textContent = '';
      }
    }

    function findVariant(color, size) {
      return variants.find(v =>
        v.option1.toLowerCase() === color.toLowerCase() &&
        v.option2.toLowerCase() === size.toLowerCase()
      );
    }

    function findFirstAvailableSizeForColor(color) {
      return variants.find(v =>
        v.option1.toLowerCase() === color.toLowerCase() && v.available
      );
    }

    function updateSelectedVariant(color, size) {
      let variant = findVariant(color, size);
      if (!variant || !variant.available) {
        const fallback = findFirstAvailableSizeForColor(color);
        if (fallback) {
          selectedSize = fallback.option2;
          variant = fallback;
        } else {
          selectedSize = "";
          variant = null;
        }
      }
      if (variant) {
        variantInput.value = variant.id;
        addToCartBtn.disabled = false;
        updateMainImage(variant);
        updateDisplayedPrice(variant);
      } else {
        variantInput.value = "";
        addToCartBtn.disabled = true;
        updateDisplayedPrice(null);
      }
    }

    function setActiveSize(sizeText) {
      sizeItems.forEach(item => {
        const size = item.textContent.trim();
        if (size.toLowerCase() === sizeText.toLowerCase()) {
          item.classList.add("active");
        } else {
          item.classList.remove("active");
        }
      });
    }

    function updateSizeAvailability() {
      sizeItems.forEach(item => {
        const size = item.textContent.trim();
        const variant = findVariant(selectedColor, size);
        if (variant && variant.available) {
          item.classList.remove("size-unavailable");
        } else {
          item.classList.add("size-unavailable");
        }
      });
    }

    colorLinks.forEach(link => {
      link.addEventListener("click", () => {
        colorLinks.forEach(l => l.classList.remove("active"));
        link.classList.add("active");
        selectedColor = link.dataset.colorName || link.textContent.trim();
        document.querySelector("#selected-color strong").innerText = selectedColor.toUpperCase();
        updateSizeAvailability();
        const fallback = findFirstAvailableSizeForColor(selectedColor);
        if (fallback) {
          selectedSize = fallback.option2;
          setActiveSize(selectedSize);
        }
        updateSelectedVariant(selectedColor, selectedSize);
      });
    });

    sizeItems.forEach(item => {
      item.addEventListener("click", () => {
        const size = item.textContent.trim();
        if (item.classList.contains("size-unavailable")) return;

        if (item.classList.contains("active")) {
          const fallback = findFirstAvailableSizeForColor(selectedColor);
          if (fallback) {
            selectedSize = fallback.option2;
            setActiveSize(selectedSize);
            updateSelectedVariant(selectedColor, selectedSize);
          }
        } else {
          selectedSize = size;
          setActiveSize(size);
          updateSelectedVariant(selectedColor, size);
        }
      });
    });

    // Initial Setup
    const firstColor = colorLinks[0];
    if (firstColor) {
      firstColor.classList.add("active");
      selectedColor = firstColor.dataset.colorName || firstColor.textContent.trim();
      document.querySelector("#selected-color strong").innerText = selectedColor.toUpperCase();
    }
    updateSizeAvailability();
    const firstAvailable = findFirstAvailableSizeForColor(selectedColor);
    if (firstAvailable) {
      selectedSize = firstAvailable.option2;
      setActiveSize(selectedSize);
      updateSelectedVariant(selectedColor, selectedSize);
    }
  });
</script>









