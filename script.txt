<div id="variant-price" style="margin-top: 10px; font-weight: bold;"></div>

<script>
  document.addEventListener("DOMContentLoaded", function () {
    const variants = {{ product.variants | json }};
    let selectedColor = "{{ product.selected_or_first_available_variant.option1 }}";
    let selectedSize = "";

    const variantInput = document.getElementById("pdp-cart-btn");
    const addToCartBtn = document.querySelector(".add-to-cart-btn");
    const colorLinks = document.querySelectorAll(".color-swatch-link");
    const sizeItems = document.querySelectorAll(".size-item");
    const priceDisplay = document.getElementById("variant-price");

    function updateDisplayedPrice(matchedVariant) {
      if (matchedVariant) {
        priceDisplay.textContent = matchedVariant.price
          ? `$${(matchedVariant.price / 100).toFixed(2)}`
          : '';
      } else {
        priceDisplay.textContent = '';
      }
    }

    function updateSelectedVariant() {
      let matchedVariant = variants.find(v =>
        v.option1.toLowerCase() === selectedColor.toLowerCase() &&
        v.option2.toLowerCase() === selectedSize.toLowerCase()
      );

      if (!matchedVariant && selectedSize) {
        const numberMatch = selectedSize.match(/^\d+/);
        if (numberMatch) {
          const sizeNumber = numberMatch[0];
          matchedVariant = variants.find(v =>
            v.option1.toLowerCase() === selectedColor.toLowerCase() &&
            v.option2.toLowerCase().startsWith(sizeNumber)
          );
        }
      }

      if (!matchedVariant) {
        matchedVariant = variants.find(v =>
          v.option1.toLowerCase() === selectedColor.toLowerCase()
        );
      }

      if (matchedVariant && matchedVariant.available) {
        variantInput.value = matchedVariant.id;
        // addToCartBtn.disabled = false;
      } else {
        variantInput.value = "";
        // addToCartBtn.disabled = true;
      }

      updateDisplayedPrice(matchedVariant);
    }

    function selectFirstAvailableSizeForColor() {
      let firstAvailable = null;

      sizeItems.forEach(item => {
        const size = item.textContent.trim();
        const matchingVariant = variants.find(v =>
          v.option1.toLowerCase() === selectedColor.toLowerCase() &&
          v.option2.toLowerCase() === size.toLowerCase() &&
          v.available
        );

        item.classList.remove("active");

        if (matchingVariant && !firstAvailable) {
          firstAvailable = item;
          selectedSize = size;
        }
      });

      if (firstAvailable) {
        firstAvailable.classList.add("active");
        updateSelectedVariant();
      }
    }

    colorLinks.forEach(link => {
      link.addEventListener("click", () => {
        colorLinks.forEach(l => l.classList.remove("active"));
        link.classList.add("active");
        selectedColor = link.dataset.colorName || link.textContent.trim();
        document.querySelector("#selected-color strong").innerText = selectedColor.toUpperCase();

        selectedSize = "";
        sizeItems.forEach(item => item.classList.remove("active"));

        // Update available sizes
        sizeItems.forEach(item => {
          const size = item.textContent.trim();
          const matchingVariant = variants.find(v =>
            v.option1.toLowerCase() === selectedColor.toLowerCase() &&
            v.option2.toLowerCase() === size.toLowerCase()
          );
          if (matchingVariant && matchingVariant.available) {
            item.classList.remove("size-unavailable");
          } else {
            item.classList.add("size-unavailable");
          }
        });

        selectFirstAvailableSizeForColor();
      });
    });

    sizeItems.forEach(item => {
      item.addEventListener("click", () => {
        if (item.classList.contains("size-unavailable")) return;

        if (item.classList.contains("active")) {
          item.classList.remove("active");
          selectedSize = "";
          variantInput.value = "";
          // addToCartBtn.disabled = true; 
          updateDisplayedPrice(null);

          selectFirstAvailableSizeForColor();
        } else {
          sizeItems.forEach(i => i.classList.remove("active"));
          item.classList.add("active");
          selectedSize = item.dataset.sizeName || item.textContent.trim();
          updateSelectedVariant();
        }
      });
    });

    const firstColorLink = colorLinks[0];
    if (firstColorLink) {
      firstColorLink.classList.add("active");
      selectedColor = firstColorLink.dataset.colorName || firstColorLink.textContent.trim();
      document.querySelector("#selected-color strong").innerText = selectedColor.toUpperCase();

      sizeItems.forEach(item => {
        const size = item.textContent.trim();
        const matchingVariant = variants.find(v =>
          v.option1.toLowerCase() === selectedColor.toLowerCase() &&
          v.option2.toLowerCase() === size.toLowerCase()
        );
        if (matchingVariant && matchingVariant.available) {
          item.classList.remove("size-unavailable");
        } else {
          item.classList.add("size-unavailable");
        }
      });

      selectFirstAvailableSizeForColor();
    }

    addToCartBtn.disabled = false;
  });
</script>


